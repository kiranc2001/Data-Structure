3. Longest Substring Without Repeating Characters
Solved
Medium
Topics
Companies
Hint
Given a string s, find the length of the longest substring without duplicate characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.


Solution: O(n):

class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        int right=0, left=0, maxLength=0;

        HashSet<Character> set= new HashSet<Character>();

        while(right<s.length()){

            if(!set.contains(s.charAt(right))){
                set.add(s.charAt(right));
                maxLength= Math.max(maxLength, right-left+1);
                right++;
            } else{
                set.remove(s.charAt(left));
                left++;

            }
        }
        return maxLength;
    }
}
